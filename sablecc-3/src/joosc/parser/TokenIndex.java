/* This file was generated by SableCC (http://www.sablecc.org/). */

package joosc.parser;

import joosc.node.*;
import joosc.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTAbstract(@SuppressWarnings("unused") TAbstract node)
    {
        this.index = 0;
    }

    @Override
    public void caseTBoolean(@SuppressWarnings("unused") TBoolean node)
    {
        this.index = 1;
    }

    @Override
    public void caseTBreak(@SuppressWarnings("unused") TBreak node)
    {
        this.index = 2;
    }

    @Override
    public void caseTByte(@SuppressWarnings("unused") TByte node)
    {
        this.index = 3;
    }

    @Override
    public void caseTCase(@SuppressWarnings("unused") TCase node)
    {
        this.index = 4;
    }

    @Override
    public void caseTCatch(@SuppressWarnings("unused") TCatch node)
    {
        this.index = 5;
    }

    @Override
    public void caseTChar(@SuppressWarnings("unused") TChar node)
    {
        this.index = 6;
    }

    @Override
    public void caseTClass(@SuppressWarnings("unused") TClass node)
    {
        this.index = 7;
    }

    @Override
    public void caseTConst(@SuppressWarnings("unused") TConst node)
    {
        this.index = 8;
    }

    @Override
    public void caseTContinue(@SuppressWarnings("unused") TContinue node)
    {
        this.index = 9;
    }

    @Override
    public void caseTDefault(@SuppressWarnings("unused") TDefault node)
    {
        this.index = 10;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 11;
    }

    @Override
    public void caseTDouble(@SuppressWarnings("unused") TDouble node)
    {
        this.index = 12;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 13;
    }

    @Override
    public void caseTExtends(@SuppressWarnings("unused") TExtends node)
    {
        this.index = 14;
    }

    @Override
    public void caseTExtern(@SuppressWarnings("unused") TExtern node)
    {
        this.index = 15;
    }

    @Override
    public void caseTFinal(@SuppressWarnings("unused") TFinal node)
    {
        this.index = 16;
    }

    @Override
    public void caseTFinally(@SuppressWarnings("unused") TFinally node)
    {
        this.index = 17;
    }

    @Override
    public void caseTFloat(@SuppressWarnings("unused") TFloat node)
    {
        this.index = 18;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 19;
    }

    @Override
    public void caseTGoto(@SuppressWarnings("unused") TGoto node)
    {
        this.index = 20;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 21;
    }

    @Override
    public void caseTImplements(@SuppressWarnings("unused") TImplements node)
    {
        this.index = 22;
    }

    @Override
    public void caseTImport(@SuppressWarnings("unused") TImport node)
    {
        this.index = 23;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 24;
    }

    @Override
    public void caseTInstanceof(@SuppressWarnings("unused") TInstanceof node)
    {
        this.index = 25;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 26;
    }

    @Override
    public void caseTInterface(@SuppressWarnings("unused") TInterface node)
    {
        this.index = 27;
    }

    @Override
    public void caseTLong(@SuppressWarnings("unused") TLong node)
    {
        this.index = 28;
    }

    @Override
    public void caseTMain(@SuppressWarnings("unused") TMain node)
    {
        this.index = 29;
    }

    @Override
    public void caseTNative(@SuppressWarnings("unused") TNative node)
    {
        this.index = 30;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 31;
    }

    @Override
    public void caseTPackage(@SuppressWarnings("unused") TPackage node)
    {
        this.index = 32;
    }

    @Override
    public void caseTPrivate(@SuppressWarnings("unused") TPrivate node)
    {
        this.index = 33;
    }

    @Override
    public void caseTProtected(@SuppressWarnings("unused") TProtected node)
    {
        this.index = 34;
    }

    @Override
    public void caseTPublic(@SuppressWarnings("unused") TPublic node)
    {
        this.index = 35;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 36;
    }

    @Override
    public void caseTShort(@SuppressWarnings("unused") TShort node)
    {
        this.index = 37;
    }

    @Override
    public void caseTStatic(@SuppressWarnings("unused") TStatic node)
    {
        this.index = 38;
    }

    @Override
    public void caseTSuper(@SuppressWarnings("unused") TSuper node)
    {
        this.index = 39;
    }

    @Override
    public void caseTSwitch(@SuppressWarnings("unused") TSwitch node)
    {
        this.index = 40;
    }

    @Override
    public void caseTSynchronized(@SuppressWarnings("unused") TSynchronized node)
    {
        this.index = 41;
    }

    @Override
    public void caseTThis(@SuppressWarnings("unused") TThis node)
    {
        this.index = 42;
    }

    @Override
    public void caseTThrow(@SuppressWarnings("unused") TThrow node)
    {
        this.index = 43;
    }

    @Override
    public void caseTThrows(@SuppressWarnings("unused") TThrows node)
    {
        this.index = 44;
    }

    @Override
    public void caseTTransient(@SuppressWarnings("unused") TTransient node)
    {
        this.index = 45;
    }

    @Override
    public void caseTTry(@SuppressWarnings("unused") TTry node)
    {
        this.index = 46;
    }

    @Override
    public void caseTVoid(@SuppressWarnings("unused") TVoid node)
    {
        this.index = 47;
    }

    @Override
    public void caseTVolatile(@SuppressWarnings("unused") TVolatile node)
    {
        this.index = 48;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 49;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 50;
    }

    @Override
    public void caseTGt(@SuppressWarnings("unused") TGt node)
    {
        this.index = 51;
    }

    @Override
    public void caseTLt(@SuppressWarnings("unused") TLt node)
    {
        this.index = 52;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 53;
    }

    @Override
    public void caseTEq(@SuppressWarnings("unused") TEq node)
    {
        this.index = 54;
    }

    @Override
    public void caseTLeq(@SuppressWarnings("unused") TLeq node)
    {
        this.index = 55;
    }

    @Override
    public void caseTGeq(@SuppressWarnings("unused") TGeq node)
    {
        this.index = 56;
    }

    @Override
    public void caseTNeq(@SuppressWarnings("unused") TNeq node)
    {
        this.index = 57;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 58;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 59;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 60;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 61;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 62;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 63;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 64;
    }

    @Override
    public void caseTLBrace(@SuppressWarnings("unused") TLBrace node)
    {
        this.index = 65;
    }

    @Override
    public void caseTRBrace(@SuppressWarnings("unused") TRBrace node)
    {
        this.index = 66;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 67;
    }

    @Override
    public void caseTLPar(@SuppressWarnings("unused") TLPar node)
    {
        this.index = 68;
    }

    @Override
    public void caseTRPar(@SuppressWarnings("unused") TRPar node)
    {
        this.index = 69;
    }

    @Override
    public void caseTLBracket(@SuppressWarnings("unused") TLBracket node)
    {
        this.index = 70;
    }

    @Override
    public void caseTRBracket(@SuppressWarnings("unused") TRBracket node)
    {
        this.index = 71;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 72;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 73;
    }

    @Override
    public void caseTInc(@SuppressWarnings("unused") TInc node)
    {
        this.index = 74;
    }

    @Override
    public void caseTNull(@SuppressWarnings("unused") TNull node)
    {
        this.index = 75;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 76;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 77;
    }

    @Override
    public void caseTCharconst(@SuppressWarnings("unused") TCharconst node)
    {
        this.index = 78;
    }

    @Override
    public void caseTIntconst(@SuppressWarnings("unused") TIntconst node)
    {
        this.index = 79;
    }

    @Override
    public void caseTStringconst(@SuppressWarnings("unused") TStringconst node)
    {
        this.index = 80;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 81;
    }

    @Override
    public void caseTImportpath(@SuppressWarnings("unused") TImportpath node)
    {
        this.index = 82;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 83;
    }
}
